{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","sliceIterator","TypeError","operations","resetGrid","from","map","fill","countNeighbors","grid","x","y","reduce","acc","_ref","_ref2","j","col","App","_useState","useState","_useState2","setGrid","_useState3","_useState4","running","setRunning","_useState5","_useState6","generation","setGeneration","runningRef","useRef","current","generationRef","_useState7","_useState8","speed","setSpeed","runSimulation","useCallback","setTimeout","runner","currentGrid","produce","gridCopy","count","React","createElement","style","position","top","left","transform","onClick","rows","Math","random","seedGrid","clear","marginLeft","htmlFor","display","width","maxWidth","marginTop","onChange","event","target","type","name","min","max","step","id","defaultValue","gridTemplateColumns","rowIdx","colIdx","key","newGrid","height","backgroundColor","border","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","react_default","a","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2a071945.chunk.js","sourcesContent":["\nimport React, { useCallback, useRef, useState } from \"react\";\nimport produce from \"immer\";\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar numRows = 25;\nvar numCols = numRows;\n// const speed = 100;\nvar sparsity = 0.7;\n\nvar operations = [[-1, -1], [-1, 0], [-1, 1], [0, -1], [0, 1], [1, -1], [1, 0], [1, 1]];\n\nvar resetGrid = function resetGrid() {\n  return Array.from({ length: numRows }).map(function () {\n    return Array.from({ length: numCols }).fill(0);\n  }, 0);\n};\n\nvar seedGrid = function seedGrid() {\n  var rows = [];\n  for (var i = 0; i < numRows; ++i) {\n    rows.push(Array.from(Array(numCols), function () {\n      return Math.random() > sparsity ? 1 : 0;\n    }));\n  }\n  return rows;\n};\n\nvar countNeighbors = function countNeighbors(grid, x, y) {\n  return operations.reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        i = _ref2[0],\n        j = _ref2[1];\n\n    var row = (x + i + numRows) % numRows;\n    var col = (y + j + numCols) % numCols;\n    acc += grid[row][col];\n    return acc;\n  }, 0);\n};\n\nvar App = function App() {\n  var _useState = useState(function () {\n    return resetGrid();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      grid = _useState2[0],\n      setGrid = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      running = _useState4[0],\n      setRunning = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      generation = _useState6[0],\n      setGeneration = _useState6[1];\n\n  var runningRef = useRef(running);\n  runningRef.current = running;\n\n  var generationRef = useRef(generation);\n  generationRef.current = generation;\n\n  var _useState7 = useState(250),\n      _useState8 = _slicedToArray(_useState7, 2),\n      speed = _useState8[0],\n      setSpeed = _useState8[1];\n\n  var runSimulation = useCallback(function () {\n    var runner = function runner() {\n      if (!runningRef.current) {\n        return;\n      }\n\n      setGrid(function (currentGrid) {\n        return produce(currentGrid, function (gridCopy) {\n          for (var i = 0; i < numRows; i++) {\n            for (var j = 0; j < numCols; j++) {\n              var count = countNeighbors(currentGrid, i, j);\n              if (currentGrid[i][j] === 1 && (count < 2 || count > 3)) gridCopy[i][j] = 0;\n              if (!currentGrid[i][j] && count === 3) gridCopy[i][j] = 1;\n            }\n          }\n        });\n      });\n      setGeneration(++generationRef.current);\n      setTimeout(runner, speed);\n    };\n    setTimeout(runner, speed);\n  }, [speed]);\n\n  return React.createElement(\n    \"div\",\n    {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50% , -50%)\"\n      }\n    },\n    React.createElement(\n      \"button\",\n      {\n        onClick: function onClick() {\n          setRunning(!running);\n          runningRef.current = !running;\n          if (!running) {\n            runSimulation();\n          }\n        }\n      },\n      !running ? \"Start\" : \"Stop\"\n    ),\n    React.createElement(\n      \"button\",\n      {\n        onClick: function onClick() {\n          setGrid(resetGrid());\n          setGeneration(0);\n        }\n      },\n      \"Clear\"\n    ),\n    React.createElement(\n      \"button\",\n      {\n        onClick: function onClick() {\n          setGrid(seedGrid());\n        }\n      },\n      \"Seed\"\n    ),\n    React.createElement(\n      \"span\",\n      { style: { clear: \"both\", marginLeft: \"20px\" } },\n      React.createElement(\n        \"label\",\n        {\n          htmlFor: \"range\",\n          style: {\n            display: \"inline-block\",\n            width: \"100%\",\n            maxWidth: \"100px\",\n            marginTop: \"10px\"\n          }\n        },\n        React.createElement(\"input\", {\n          onChange: function onChange(event) {\n            return setSpeed(event.target.value);\n          },\n          type: \"range\",\n          name: \"speed\",\n          min: \"50\",\n          max: \"500\",\n          step: \"25\",\n          id: \"range\",\n          defaultValue: \"250\",\n          style: { display: \"inline-block\", position: \"relative\" }\n        }),\n        \"Speed: \",\n        speed\n      ),\n      React.createElement(\n        \"span\",\n        null,\n        \"To change speed, you must stop and start the grid\"\n      )\n    ),\n    React.createElement(\n      \"p\",\n      null,\n      \"Generation: \",\n      generation\n    ),\n    React.createElement(\n      \"div\",\n      {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(\" + numCols + \", 20px)\"\n        }\n      },\n      grid.map(function (rows, rowIdx) {\n        return rows.map(function (col, colIdx) {\n          return React.createElement(\"div\", {\n            key: rowIdx + \"-\" + colIdx,\n            onClick: function onClick() {\n              var newGrid = produce(grid, function (gridCopy) {\n                gridCopy[rowIdx][colIdx] = grid[rowIdx][colIdx] ? 0 : 1;\n              });\n              setGrid(newGrid);\n            },\n            style: {\n              width: 20,\n              height: 20,\n              backgroundColor: grid[rowIdx][colIdx] ? \"#246EB9\" : \"#eee\",\n              border: \"1px solid black\"\n            }\n          });\n        });\n      })\n    )\n  );\n};\n\nexport default App;","var reportWebVitals = function reportWebVitals(onPerfEntry) {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(function (_ref) {\n      var getCLS = _ref.getCLS,\n          getFID = _ref.getFID,\n          getFCP = _ref.getFCP,\n          getLCP = _ref.getLCP,\n          getTTFB = _ref.getTTFB;\n\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// var root = ReactDOM.createRoot(document.getElementById(\"root\"));\n// root.render(React.createElement(React.StrictMode, null, React.createElement(App, null)));\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}